package org.firstinspires.ftc.teamcode;


import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.CRServo;
import com.qualcomm.robotcore.hardware.ColorSensor;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.util.ElapsedTime;

@Autonomous

public class Auto_2024_25 extends LinearOpMode {
       private DcMotor LFMotor;
       private DcMotor RFMotor;
       private DcMotor LBMotor;
       private DcMotor RBMotor;
       private DcMotor LSlide;
       private DcMotor RSlide;
        private DcMotor Arm;
       private Servo Wrist;
       private Servo Claw;
       
       boolean wristDown;
       boolean clawOpen;
       private ElapsedTime     runtime = new ElapsedTime();
       
public void runOpMode(){
        LFMotor = hardwareMap.get(DcMotor.class, "LFMotor");
        RFMotor = hardwareMap.get(DcMotor.class, "RFMotor");
        LBMotor = hardwareMap.get(DcMotor.class, "LBMotor");
        RBMotor = hardwareMap.get(DcMotor.class, "RBMotor");
        LSlide = hardwareMap.get(DcMotor.class, "LSlide");
        RSlide = hardwareMap.get(DcMotor.class, "RSlide");

        

        Wrist = hardwareMap.get(Servo.class, "Wrist");
        Claw = hardwareMap.get(Servo.class, "Claw");
    
        Wrist.setDirection(Servo.Direction.REVERSE);
    
        
        LBMotor.setDirection(DcMotor.Direction.REVERSE);
        LFMotor.setDirection(DcMotor.Direction.REVERSE);
        
        
        wristDown = true;
        clawOpen  = false;
        
        telemetry.addData("Status", "Running");
        telemetry.update();
        
        waitForStart();
    while(opModeIsActive()) {
        while (runtime.seconds() < 9){
            while (runtime.seconds() < 3){
                LFMotor.setPower(0.4);
                LBMotor.setPower(0.4);
                RFMotor.setPower(0.4);
                RBMotor.setPower(0.4);
            }
            LFMotor.setPower(-0.6);
            LBMotor.setPower(-0.6);
            RFMotor.setPower(-0.6);
            RBMotor.setPower(-0.6);  
}
        
}
}
}
